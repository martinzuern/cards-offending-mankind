name: CI CD

on: [push]

jobs:
  test-frontend:
    runs-on: ubuntu-latest
    container: node:12
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: yarn install --frozen-lockfile
        working-directory: ./frontend
      - name: Run linter
        run: yarn lint
        working-directory: ./frontend
      - name: Run typecheck
        run: yarn lint:type
        working-directory: ./frontend
      - name: Build frontend successfully
        run: yarn build
        working-directory: ./frontend

  test-backend:
    runs-on: ubuntu-latest
    container: node:12
    services:
      redis:
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: yarn install --frozen-lockfile
        working-directory: ./backend
      - name: Run linter
        run: yarn lint
        working-directory: ./backend
      - name: Run tests
        env:
          REDIS_URL: redis://redis:6379
        run: yarn test
        working-directory: ./backend

  deploy-heroku:
    runs-on: ubuntu-latest
    if: "'refs/heads/master' == github.ref"
    needs: [test-frontend, test-backend]
    env:
      SHORT_SHA: ${{ github.sha }}
      FRONTEND_SENTRY_DSN: ${{ secrets.FRONTEND_SENTRY_DSN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build, Push and Deploy to Heroku
        id: heroku
        uses: jctaveras/heroku-deploy@v2.0.0
        with:
          email: ${{ secrets.HEROKU_EMAIL }}
          api_key: ${{ secrets.HEROKU_API_KEY }}
          app_name: ${{ secrets.HEROKU_APP_NAME }}
          dockerfile_path: '.'
          options: '--build-arg SHORT_SHA --build-arg FRONTEND_SENTRY_DSN'
